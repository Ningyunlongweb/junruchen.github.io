{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["placeHolder","threshold","lazyClss","App","useEffect","domScroll","clientHeight","document","documentElement","window","innerHeight","querySelectorAll","forEach","el","imageTop","getBoundingClientRect","top","dataSrc","getAttribute","src","classList","add","addEventListener","removeEventListener","className","map","item","idx","data-src","key","alt","width","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+OAIMA,G,UAAc,6EACdC,EAAY,IACZC,EAAW,SAmEFC,MAjEf,WAuDE,OA5BAC,oBAAU,WACR,IAAMC,EAAY,WAChB,IAAMC,EAAeC,SAASC,gBAAgBF,cAAgBG,OAAOC,YAErEH,SAASI,iBAAiB,SAASC,QAAQ,SAACC,GAC1C,IAAMC,EAAWD,EAAGE,wBAAwBC,IACtCC,EAAUJ,EAAGK,aAAa,YAC5BlB,IAAgBa,EAAGM,MACrBN,EAAGM,IAAMnB,GAEPc,GAAYR,EAAeL,GAAaY,EAAGM,MAAQF,IACrDJ,EAAGM,IAAMF,EACLf,GACFW,EAAGO,UAAUC,IAAInB,OAUzB,OAJAG,IAEAI,OAAOa,iBAAiB,SAAUjB,GAE3B,WACLI,OAAOc,oBAAoB,SAAUlB,KAEtC,IAGD,yBAAKmB,UAAU,OAtDF,CACb,0EACA,8FACA,2HACA,8EACA,0FACA,4EACA,0EACA,uFACA,sEACA,sEACA,mGACA,0EACA,8FACA,2HACA,8EACA,0FACA,4EACA,0EACA,uFACA,sEACA,sEACA,oGAkCUC,IAAI,SAACC,EAAMC,GAAP,OACV,yBAAKH,UAAU,OAAOI,WAAUF,EAAMG,IAAKF,EAAKG,IAAK,eAAOH,EAAKI,MAAM,aCvD3DC,QACW,cAA7BvB,OAAOwB,SAASC,UAEe,UAA7BzB,OAAOwB,SAASC,UAEhBzB,OAAOwB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS9B,SAAS+B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.d7f6fbe2.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport './App.css';\n\n// 配置项\nconst placeHolder = 'https://cdn.dribbble.com/users/1821976/screenshots/7041584/raining_1x.jpg' // 默认图片地址，如果使用颜色，直接设置图片背景色即可\nconst threshold = 200 // 距离视窗底部多少像素开始加载\nconst lazyClss = 'loaded' // 加载成功后样式，用来增加过滤动画等效果\n\nfunction App() {\n  // 需要展示的大量图片\n  const imgUrl = [\n    'https://cdn.dribbble.com/users/772985/screenshots/7043973/pika_1_1x.jpg',\n    'https://cdn.dribbble.com/users/788099/screenshots/7043452/couple_the_forest_kit8-net_1x.png',\n    'https://cdn.dribbble.com/users/730703/screenshots/6988911/elenidebo-thisiscolossal-theroad-forchicagodesignmuseum_1x.jpg',\n    'https://cdn.dribbble.com/users/1278383/screenshots/7045919/_____0825_1x.png',\n    'https://cdn.dribbble.com/users/1776107/screenshots/7045879/3191566782115_.pic_hd_1x.jpg',\n    'https://cdn.dribbble.com/users/1478415/screenshots/7045840/________1x.png',\n    'https://cdn.dribbble.com/users/1786203/screenshots/7045898/__2___1x.png',\n    'https://cdn.dribbble.com/users/1818193/screenshots/7042394/weather_2x_zuairia_1x.jpg',\n    'https://cdn.dribbble.com/users/674925/screenshots/7044499/___1x.png',\n    'https://cdn.dribbble.com/users/1778456/screenshots/7045882/1_1x.png',\n    'https://cdn.dribbble.com/users/2285295/screenshots/7045974/application_of_antique_auction_1x.png',\n    'https://cdn.dribbble.com/users/772985/screenshots/7043973/pika_1_1x.jpg',\n    'https://cdn.dribbble.com/users/788099/screenshots/7043452/couple_the_forest_kit8-net_1x.png',\n    'https://cdn.dribbble.com/users/730703/screenshots/6988911/elenidebo-thisiscolossal-theroad-forchicagodesignmuseum_1x.jpg',\n    'https://cdn.dribbble.com/users/1278383/screenshots/7045919/_____0825_1x.png',\n    'https://cdn.dribbble.com/users/1776107/screenshots/7045879/3191566782115_.pic_hd_1x.jpg',\n    'https://cdn.dribbble.com/users/1478415/screenshots/7045840/________1x.png',\n    'https://cdn.dribbble.com/users/1786203/screenshots/7045898/__2___1x.png',\n    'https://cdn.dribbble.com/users/1818193/screenshots/7042394/weather_2x_zuairia_1x.jpg',\n    'https://cdn.dribbble.com/users/674925/screenshots/7044499/___1x.png',\n    'https://cdn.dribbble.com/users/1778456/screenshots/7045882/1_1x.png',\n    'https://cdn.dribbble.com/users/2285295/screenshots/7045974/application_of_antique_auction_1x.png'\n  ]\n\n  useEffect(() => {\n    const domScroll = () => {\n      const clientHeight = document.documentElement.clientHeight || window.innerHeight\n\n      document.querySelectorAll('.lazy').forEach((el) => {\n        const imageTop = el.getBoundingClientRect().top\n        const dataSrc = el.getAttribute('data-src')\n        if (placeHolder && !el.src) {\n          el.src = placeHolder\n        }\n        if (imageTop <= clientHeight + threshold && el.src !== dataSrc) {\n          el.src = dataSrc\n          if (lazyClss) {\n            el.classList.add(lazyClss)\n          }\n        }\n      });\n    }\n\n    domScroll()\n\n    window.addEventListener('scroll', domScroll)\n\n    return () => {\n      window.removeEventListener('resize', domScroll)\n    }\n  }, [])\n\n  return (\n    <div className=\"App\">\n\n      {imgUrl.map((item, idx) =>\n        <img className=\"lazy\" data-src={item} key={idx} alt={'图片' + idx} width=\"100%\" />)\n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}